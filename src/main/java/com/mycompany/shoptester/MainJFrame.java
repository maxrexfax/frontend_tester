/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.shoptester;

import com.mycompany.tests.CedUserClass;
import com.mycompany.tests.HelperClass;
import java.io.File;
import javax.swing.ButtonGroup;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author user
 */
public class MainJFrame extends javax.swing.JFrame {

    private ButtonGroup bgroupCEDs;
    private ButtonGroup bgroupCartOrder;
    
    public static final int CHANGE_CHROME_BROWSER = 1;
    public static final int CHANGE_FIREFOX_BROWSER = 2;
    public static int CURRENT_BROWSER = 1;
    
    public HelperClass helperClass = new HelperClass();
    public final String appName = "«Automatic site testing»";
    public String pathToLogFile;
    public String osName;
    public File fileToWriteLogsOfTesting;
    public File fileToWriteErrorLogOfTesting;
    public String dateTimeOfSession;
    public JFrame frame = null;
    public static JFrame frameStat = null;
    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
        makeLocalWork();
        fillData();
        setTextInInfoLabel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        TabsInfo = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jRadioButtonAll = new javax.swing.JRadioButton();
        jRadioButtonCedUser = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaInformation = new javax.swing.JTextArea();
        jButtonStartTest = new javax.swing.JButton();
        jLabelStatus = new javax.swing.JLabel();
        jTextFieldLoopsNumber = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jRadioButtonAll.setText("Start all checks below");

        jRadioButtonCedUser.setText("Create, edit, delete User");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jRadioButtonAll)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jRadioButtonCedUser)
                        .addGap(129, 375, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jRadioButtonAll)
                .addGap(18, 18, 18)
                .addComponent(jRadioButtonCedUser)
                .addContainerGap(297, Short.MAX_VALUE))
        );

        TabsInfo.addTab("First", jPanel1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 585, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 388, Short.MAX_VALUE)
        );

        TabsInfo.addTab("Second", jPanel2);

        jTextAreaInformation.setColumns(20);
        jTextAreaInformation.setRows(5);
        jScrollPane1.setViewportView(jTextAreaInformation);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                .addContainerGap())
        );

        TabsInfo.addTab("Info", jPanel3);

        jButtonStartTest.setText("Start test");
        jButtonStartTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStartTestActionPerformed(evt);
            }
        });

        jLabelStatus.setText("Current status: waiting");

        jTextFieldLoopsNumber.setText("1");

        jLabel1.setText("Number of loops");

        jMenu3.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Quit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TabsInfo)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonStartTest)
                        .addGap(26, 26, 26)
                        .addComponent(jLabelStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldLoopsNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TabsInfo)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonStartTest)
                    .addComponent(jLabelStatus)
                    .addComponent(jTextFieldLoopsNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        System.exit(1);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButtonStartTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStartTestActionPerformed
        // TODO add your handling code here:
        int loops = getDataFromTextField(jTextFieldLoopsNumber, 1, 100);   
        if (jRadioButtonAll.isSelected()) {
            String message = "Testing of ALL CEDs";  
            jLabelStatus.setText(message);//SearchCandidateClass
            helperClass.printToFileAndConsoleInformation(fileToWriteLogsOfTesting, "Work: " + message); 
            Thread tSearch = new Thread() {
                public void run() {   
                    for (int i = 0; i < loops; i++) {
                        try {
                            startAllTestsOneByOne();
                        } catch (Exception | Error ex) {
                            helperClass.writeErrorsToFiles(fileToWriteLogsOfTesting, fileToWriteErrorLogOfTesting, "Work: MainFraimClass ERROR start all tests!", ex.getMessage());
                        }
                    }
                }
            };
            tSearch.start();
        } else if (jRadioButtonCedUser.isSelected()) {                 
            String message = "Testing of the users Create, Edit, Delete";            
            jLabelStatus.setText(message);         
            helperClass.printToFileAndConsoleInformation(fileToWriteLogsOfTesting, "Work: " + message);   
            Thread tSort = new Thread() {
                public void run() {
                    for (int i = 0; i < loops; i++) {
                        CedUserClass sortCandidatesClass = new CedUserClass(pathToLogFile, osName);                    
                        try {
                            sortCandidatesClass.startCedTestUsers();
                        } catch (Exception | Error ex) {
                            helperClass.writeErrorsToFiles(fileToWriteLogsOfTesting, fileToWriteErrorLogOfTesting, "Work: MainFraimClass ERROR sortCandidatesClass.startCedTestUsers()!", ex.getMessage());
                        }
                    }
                }
            };
            tSort.start();            
        } else {
            jLabelStatus.setText("EMPTY CHOICE!"); 
            JOptionPane.showMessageDialog(frame, "EMPTY CHOICE!");
        }
    }//GEN-LAST:event_jButtonStartTestActionPerformed

    private void startAllTestsOneByOne() {
        //Test Users
        CedUserClass sortCandidatesClass = new CedUserClass(pathToLogFile, osName);                    
        try {
            sortCandidatesClass.startCedTestUsers();
        } catch (Exception | Error ex) {
            helperClass.writeErrorsToFiles(fileToWriteLogsOfTesting, fileToWriteErrorLogOfTesting, "Work: MainFraimClass ERROR sortCandidatesClass.startCedTestUsers()!", ex.getMessage());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane TabsInfo;
    private javax.swing.JButton jButtonStartTest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButtonAll;
    private javax.swing.JRadioButton jRadioButtonCedUser;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaInformation;
    private javax.swing.JTextField jTextFieldLoopsNumber;
    // End of variables declaration//GEN-END:variables

    private void makeLocalWork() {
        bgroupCEDs = new ButtonGroup();
        bgroupCEDs.add(jRadioButtonAll);
        bgroupCEDs.add(jRadioButtonCedUser);
        frame = this;
        frame.setTitle(appName);
    }
    
    private void fillData() {
        String fileName = "";
        String fileNameERRORS = "";
        dateTimeOfSession = helperClass.getDateInStringForWindowsLinux(); 
        
        osName = System.getProperty("os.name");
        //System.out.println("osName:" + osName);
       // JOptionPane.showMessageDialog(frame, "osName=" + osName);
        File theDirectoryForLogFiles = null;
        if (osName.contains("Linux")) {
            pathToLogFile = "./logs/";            
            System.setProperty("webdriver.chrome.driver", "/usr/bin/chromedriver");      
            System.setProperty("webdriver.gecko.driver", "/usr/bin/geckodriver");            
        } else if (osName.contains("Windows")) {
            pathToLogFile = "C:\\users\\public\\documents\\logs\\";            
            System.setProperty("webdriver.chrome.driver", "C:\\users\\public\\documents\\chromedriver.exe");
            System.setProperty("webdriver.gecko.driver", "C:\\users\\public\\documents\\geckodriver.exe");            
        } else {
            pathToLogFile = "./";
        }
        
        try {
            theDirectoryForLogFiles = new File(pathToLogFile);
            theDirectoryForLogFiles.mkdirs();
            //System.out.println("Create folder for log files at path " + pathToLogFile);
        } catch (Exception ex) {
            //System.out.println("ERROR with creation of the folder for log files at path " + pathToLogFile);            
        }        
        
        fileName = pathToLogFile + "mainApplicationLog_" + dateTimeOfSession + ".txt";
        fileNameERRORS = pathToLogFile + "mainApplicationLog_ERRORS_" + dateTimeOfSession + ".txt";        
        
        try {
            fileToWriteLogsOfTesting = new File(fileName);
            fileToWriteErrorLogOfTesting = new File(fileNameERRORS);
            //System.out.println("Path to logfile:" + fileName);
        } catch (Exception exx) {
            //System.out.println(exx.getMessage());
            //System.out.println("Error file creation, test log will be only in terminal");
        }
        helperClass.printToFileAndConsoleInformation(fileToWriteLogsOfTesting, "Work: Start");   
    }
    
    private void setTextInInfoLabel() {
        
        StringBuffer strBuffer = new StringBuffer();
        strBuffer.append("To use this application make sure GoogleChromDriver and GeckoDriver are placed in the folder ");
        if (osName.contains("Linux")) {
            strBuffer.append("/usr/bin/");
        } else if (osName.contains("Windows")) {
            strBuffer.append("C:\\users\\public\\documents\\");
        }
        strBuffer.append(".\nMake sure that the version of the Chromedriver matches the version of the Chrome browser you have installed.\n");
        strBuffer.append("Log files will be saved to the folder ");
        if (osName.contains("Linux")) {
            strBuffer.append("/logs/.");
        } else if (osName.contains("Windows")) {
            strBuffer.append("C:\\users\\public\\documents\\logs.");
        }
        jTextAreaInformation.setLineWrap(true);
        jTextAreaInformation.setText(strBuffer.toString());
    }

    
    private int getDataFromTextField(JTextField jTextFieldToGetData, int min, int max) {
        int result = 0;
            try {
                result = Integer.parseInt(jTextFieldToGetData.getText());
            } catch (Exception | Error ex) {
                result = (min);
                jTextFieldToGetData.setText("" + result);
                JOptionPane.showMessageDialog(frame, "Error! Only numeric! Set to " + result);
            }
            if (result < min || result > max) {
                result = min;
                jTextFieldToGetData.setText("" + result);
                JOptionPane.showMessageDialog(frame, "Error! Set to " + result);
            }
        return result;
    }
}
